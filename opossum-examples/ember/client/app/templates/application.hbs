<h2 id="title">Welcome to Ember</h2>

<div className="App">
  <h1>Opossum Circuit Breaker Example</h1>

  <p>
      When you click the button here, this simple app calls a flakey web service that takes longer and longer to respond. The app circuit breaker is configured to timeout after 500ms and execute a fallback command. Every 20 seconds, the flakey service is reset and the pattern is repeated.
  </p>
  <p>
      If more than 3 errors are observed by the circuit within a single timeout period, then it begins to fail fast, rejecting the network call outright and executing the fallback function.
  </p>
  <p>
       This should allow you to see all of the various events that occur when using a circuit breaker.
  </p>
  <p>
      The <a href="/app.js">source code</a> for the application is relatively simple, and uses some basic jQuery capabilities to make the ajax calls and update the DOM accordingly.
  </p>

  <div className="row">
    <button id="flakey" {{action "makeRequest"}}>
        Flakey service
    </button>
  </div>
  <div className="row" id="flakeyResponse">
    <h2>FLAKEY RESPONSES</h2>
    <span className="clear" {{action "clear"}}>Click to clear</span>
    {{#each this.responses as |response|}}
        <p className={{lowercase response.state}}>
          <span>{{response.state}}</span>
          <span>{{response.body}}</span>
      </p>
    {{/each}}
  </div>
</div>

{{outlet}}
